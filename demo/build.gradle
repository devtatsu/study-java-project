plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'eclipse'
	id 'jacoco'
	id 'checkstyle'
	id "com.github.spotbugs" version "5.0.6"
}

repositories {
	mavenCentral()
}

bootJar {
	enabled = false
}

jar {
	enabled = false
}

// カバレッジレポート除外リスト
def jacocoExclusions = [
	'**/common/constants/*',
	'**/controller/request/*',
	'**/controller/response/*',
	'**/resource/*',
	'**/domain/models/*',
	'**/demo/DemoApplication.class'
];

subprojects {

    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
	apply plugin: "jacoco"
	apply plugin: "checkstyle"
	apply plugin: "com.github.spotbugs"

	checkstyle {
		toolVersion '8.37'
		configFile = rootProject.file('config/checkstyle/checkstyle.xml')
		ignoreFailures true
	}

	spotbugs {
		toolVersion = '4.6.0'
		ignoreFailures = true
		spotbugsTest.enabled = false
		includeFilter = rootProject.file('config/spotbugs/customfilter.xml')
		// showStackTraces = true
		// effort = "max"
		// reportLevel = "high"
		// useAuxclasspathFile = true
	}

	spotbugsMain {
		reports {
			html {
				enabled = true
			}
		}
	}
 
	dependencyManagement {
		imports {
			mavenBom "org.junit:junit-bom:5.4.2"
		}
	}

	group = 'com.example'
	version = '0.0.1-SNAPSHOT'
	// sourceCompatibility = '1.8'
	sourceCompatibility = '11'

	repositories {
		mavenCentral()
	}

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'junit', module: 'junit'
		}
		testImplementation 'org.junit.jupiter:junit-jupiter'//JUnit5のAPI
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'//IDEなどのサポート用
		testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'//JUnit3,4対応
		testCompileOnly 'junit:junit'//Junit5のBOMからJunit4を入れなおせば、4以前のテストも競合しないようです
		implementation 'org.projectlombok:lombok'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
		implementation fileTree(dir: 'libs', includes: ['*.jar'])
		implementation 'com.h2database:h2:2.1.210'
		implementation 'org.springframework.boot:spring-boot-starter-jdbc'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		// compileOnly "com.github.spotbugs:spotbugs:4.6.0"
		// spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
		spotbugsSlf4j group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta4'
		spotbugsSlf4j group: 'org.slf4j', name: 'slf4j-simple', version: '1.8.0-beta4'
	}

    // test {
    //     useJUnitPlatform()
    // }

	tasks.withType(AbstractCompile).each { it.options.encoding = 'UTF-8' }

	test.finalizedBy jacocoTestReport

	jacocoTestReport {

		reports {
			html.enabled = true
		}

		afterEvaluate {
			classDirectories.setFrom(classDirectories.files.collect {
				fileTree(dir: it, excludes: jacocoExclusions )
			})
		}

	}

	sourceSets {
		main {
			java {
				srcDirs = [ 'src/main/java' ]
			}
		}
		test {
			java {
				srcDirs = [ 'src/test/java' ]
			}
			resources {
				srcDirs = [ 'src/test/resources' ]
			}
		}
	}

}

project(":rest-api") {

    bootJar {
        enabled = true
    }

	jar {
		enabled = true
	}

    dependencies {
		implementation project(':spring-jpa')
		implementation project(":common")
    }

}

project(":spring-jpa") {

    bootJar {
        enabled = false
    }

	jar {
		enabled = true
	}
	
}

project(":common") {

    bootJar {
        enabled = false
    }

	jar {
		enabled = true
	}

}
