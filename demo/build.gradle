plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'eclipse'
	id 'jacoco'
}

repositories {
	mavenCentral()
}

bootJar {
	enabled = false
}

jar {
	enabled = false
}

subprojects {

    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
	apply plugin: "jacoco"

	group = 'com.example'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '1.8'
	// sourceCompatibility = '11'

	repositories {
		mavenCentral()
	}

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		implementation 'junit:junit:4.+'
		implementation 'org.projectlombok:lombok'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
		implementation fileTree(dir: 'libs', includes: ['*.jar'])
		implementation 'com.h2database:h2:2.1.210'
		implementation 'org.springframework.boot:spring-boot-starter-jdbc'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	}

    test {
        useJUnitPlatform()
		// finalizedBy jacocoTestReport // report is always generated after tests run
    }

	// jacoco {
	// 	toolVersion = "0.7.+"
	// }

	tasks.withType(AbstractCompile).each { it.options.encoding = 'UTF-8' }

	sourceSets {
		main {
			java {
				srcDirs = [ 'src/main/java' ]
			}
		}
		test {
			java {
				srcDirs = [ 'src/test/java' ]
			}
			resources {
				srcDirs = [ 'src/test/resources' ]
			}
		}
	}

}

task testReport(type: TestReport) {
    reportOn subprojects.tasks.test.binResultsDir
    destinationDir file("$buildDir/reports/tests/test")
}

task jacocoMerge(type: JacocoMerge) {
    executionData project(':rest-api').tasks.test.jacoco.destinationFile
    executionData project(':spring-jpa').tasks.test.jacoco.destinationFile
	executionData project(':common').tasks.test.jacoco.destinationFile
}

task jacocoReport(type: JacocoReport) {
    dependsOn jacocoMerge

    executionData jacocoMerge.destinationFile
    // sourceSets *subprojects.sourceSets.main
}

project(":rest-api") {

    bootJar {
        enabled = true
    }

	jar {
		enabled = true
	}

    dependencies {
		implementation project(':spring-jpa')
		implementation project(":common")
    }
}

project(":spring-jpa") {

    bootJar {
        enabled = false
    }

	jar {
		enabled = true
	}
	
}

project(":common") {

    bootJar {
        enabled = false
    }

	jar {
		enabled = true
	}

}
